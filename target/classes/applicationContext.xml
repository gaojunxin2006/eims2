<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

	
	<!-- 配置数据源，记得去掉myBatis-config.xml的数据源相关配置 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="jdbc:mysql://192.168.0.242:3306/eims?useUnicode=true&amp;characterEncoding=UTF-8" />
		<property name="user" value="wii" />
		<property name="password" value="69658757" />
	</bean>



	<!-- 配置session工厂 org.mybatis.spring.SqlSessionFactoryBean ，
	这个是用的mybatis整合spring。 如果使用MybatisPlus,修改这里 com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean-->

	<bean id="sqlSessionFactoryBean" class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:myBatis-config.xml"></property>

		<!--配置扫描式加载SQL映射文件,记得去掉mybatis-config配置-->
		<property name="mapperLocations" value="classpath:cn/linguo/*/*.xml"/>
		<!-- 别名处理 -->
		<property name="typeAliasesPackage" value="cn.linguo.entity"></property>

		<!-- 注入全局配置 -->
		<property name="globalConfig" ref="globalConfig"/>


	</bean>




	<!-- 定义mybatisPlus全局配置 -->

	<bean id="globalConfig" class="com.baomidou.mybatisplus.core.config.GlobalConfig">

		<property name="dbConfig" ref="dbConfig"></property>

	</bean>


	<bean id="dbConfig" class="com.baomidou.mybatisplus.core.config.GlobalConfig.DbConfig">

		<!-- 主键自动生成 -->
		<property name="idType" value="AUTO"></property>

		<!-- 表前缀 -->
<!--		<property name="tablePrefix" value=""></property>-->

	</bean>





	
	<!-- 配置事务管理器,管理数据源事务处理-->
	<bean id="tr" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>

	</bean>
	<!-- 基于注解的事务管理 -->
	<tx:annotation-driven transaction-manager="tr"/>



	<!-- 配置事务通知 -->
	<tx:advice id="advice" transaction-manager="tr">

	<tx:attributes>


	<!-- 默认只处理运行时异常，可加rollback-for="Exception/Throwable"等处理所有异常或包括错误 -->
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="*" propagation="SUPPORTS"/>
		</tx:attributes>
	</tx:advice>



	<!-- 配置切面织入的范围,后边要把事务边界定在service层 -->
<!-- 	<aop:config>
		<aop:advisor advice-ref="advice" pointcut="execution(* cn.itcast.scm.dao.impl.*.*(..))"/>
	</aop:config> -->
	
	<!-- 把事务边界定在service层 -->
	<aop:config>
		<aop:advisor advice-ref="advice" pointcut="execution(* cn.linguo.service.impl.*.*(..))"/>


	</aop:config>




<!-- 自动扫描组件，要把controller去除，他们是在spring-mvc.xml中配置，如果不去除会影响事务管理。   --> 

	<context:component-scan base-package="cn.linguo">

		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>

	</context:component-scan>




	
		<!-- 配置 转换器，对于在basePackage设置的包（包括子包）下的接口类 的全类名，如果在Mapper.xml文件中定义过命名空间，
	将被转换成spring的BEAN，在调用 的地方通过@Autowired方式将可以注入接口实例-->

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">

		<property name="sqlSessionFactory" ref="sqlSessionFactoryBean"></property>
		<property name="basePackage" value="cn.linguo.dao,cn.linguo.mapper"></property>

	</bean>





	<!-- 配置SessionTemplate，已封装了繁琐的数据操作-->
<!--	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">-->
<!--		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>-->


<!--	</bean>-->




	
	<!-- <context:component-scan base-package="*"/> -->







	<!-- 定义MybatisPlus的全局策略配置-->




</beans>